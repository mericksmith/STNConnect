//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StationCasinos.Repository.Lookup.SCEnterpriseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyData", Namespace="http://www.stationcasinos.com/datacontracts/2010/01/enterprise")]
    [System.SerializableAttribute()]
    public partial class PropertyData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ring {
            get {
                return this.RingField;
            }
            set {
                if ((object.ReferenceEquals(this.RingField, value) != true)) {
                    this.RingField = value;
                    this.RaisePropertyChanged("Ring");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnterpriseData", Namespace="http://www.stationcasinos.com/datacontracts/2010/01/enterprise")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.StateData))]
    public partial class EnterpriseData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryData", Namespace="http://www.stationcasinos.com/datacontracts/2010/01/enterprise")]
    [System.SerializableAttribute()]
    public partial class CountryData : StationCasinos.Repository.Lookup.SCEnterpriseService.EnterpriseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentificationTypeData", Namespace="http://www.stationcasinos.com/datacontracts/2010/01/enterprise")]
    [System.SerializableAttribute()]
    public partial class IdentificationTypeData : StationCasinos.Repository.Lookup.SCEnterpriseService.EnterpriseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StateData", Namespace="http://www.stationcasinos.com/datacontracts/2010/01/enterprise")]
    [System.SerializableAttribute()]
    public partial class StateData : StationCasinos.Repository.Lookup.SCEnterpriseService.EnterpriseData {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VenueData", Namespace="http://www.stationcasinos.com/datacontracts/2010/01/enterprise")]
    [System.SerializableAttribute()]
    public partial class VenueData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenueNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VenueName {
            get {
                return this.VenueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VenueNameField, value) != true)) {
                    this.VenueNameField = value;
                    this.RaisePropertyChanged("VenueName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TenderType", Namespace="http://www.stationcasinos.com/datacontracts/2010/01/enterprise")]
    [System.SerializableAttribute()]
    public partial class TenderType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenderTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenderName {
            get {
                return this.TenderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TenderNameField, value) != true)) {
                    this.TenderNameField = value;
                    this.RaisePropertyChanged("TenderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenderTypeID {
            get {
                return this.TenderTypeIDField;
            }
            set {
                if ((this.TenderTypeIDField.Equals(value) != true)) {
                    this.TenderTypeIDField = value;
                    this.RaisePropertyChanged("TenderTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.Jurisdiction))]
    public partial class StructuralObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.Jurisdiction))]
    public partial class EntityObject : StationCasinos.Repository.Lookup.SCEnterpriseService.StructuralObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StationCasinos.Repository.Lookup.SCEnterpriseService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StationCasinos.Repository.Lookup.SCEnterpriseService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jurisdiction", Namespace="http://schemas.datacontract.org/2004/07/StationCasinos.Enterprise.ResourceAccess", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Jurisdiction : StationCasinos.Repository.Lookup.SCEnterpriseService.EntityObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class EntityKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityContainerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.EntityKeyMember> EntityKeyValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntitySetNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.StateData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.EnterpriseData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.StateData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.TenderType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.TenderType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.EntityKeyMember>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(StationCasinos.Repository.Lookup.SCEnterpriseService.Jurisdiction))]
    public partial class EntityKeyMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RaceGameCodeData", Namespace="http://schemas.datacontract.org/2004/07/StationCasinos.Enterprise.ResourceAccess." +
        "DataContracts")]
    [System.SerializableAttribute()]
    public partial class RaceGameCodeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsParimutuelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RaceBetTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TheoPctField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameCode {
            get {
                return this.GameCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GameCodeField, value) != true)) {
                    this.GameCodeField = value;
                    this.RaisePropertyChanged("GameCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameID {
            get {
                return this.GameIDField;
            }
            set {
                if ((this.GameIDField.Equals(value) != true)) {
                    this.GameIDField = value;
                    this.RaisePropertyChanged("GameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsParimutuel {
            get {
                return this.IsParimutuelField;
            }
            set {
                if ((this.IsParimutuelField.Equals(value) != true)) {
                    this.IsParimutuelField = value;
                    this.RaisePropertyChanged("IsParimutuel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RaceBetTypeID {
            get {
                return this.RaceBetTypeIDField;
            }
            set {
                if ((this.RaceBetTypeIDField.Equals(value) != true)) {
                    this.RaceBetTypeIDField = value;
                    this.RaisePropertyChanged("RaceBetTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TheoPct {
            get {
                return this.TheoPctField;
            }
            set {
                if ((this.TheoPctField.Equals(value) != true)) {
                    this.TheoPctField = value;
                    this.RaisePropertyChanged("TheoPct");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SportsGameCodeData", Namespace="http://schemas.datacontract.org/2004/07/StationCasinos.Enterprise.ResourceAccess." +
        "DataContracts")]
    [System.SerializableAttribute()]
    public partial class SportsGameCodeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SportsBetTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TheoPctField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameCode {
            get {
                return this.GameCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GameCodeField, value) != true)) {
                    this.GameCodeField = value;
                    this.RaisePropertyChanged("GameCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GameID {
            get {
                return this.GameIDField;
            }
            set {
                if ((this.GameIDField.Equals(value) != true)) {
                    this.GameIDField = value;
                    this.RaisePropertyChanged("GameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationID {
            get {
                return this.LocationIDField;
            }
            set {
                if ((this.LocationIDField.Equals(value) != true)) {
                    this.LocationIDField = value;
                    this.RaisePropertyChanged("LocationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SportsBetTypeID {
            get {
                return this.SportsBetTypeIDField;
            }
            set {
                if ((this.SportsBetTypeIDField.Equals(value) != true)) {
                    this.SportsBetTypeIDField = value;
                    this.RaisePropertyChanged("SportsBetTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TheoPct {
            get {
                return this.TheoPctField;
            }
            set {
                if ((this.TheoPctField.Equals(value) != true)) {
                    this.TheoPctField = value;
                    this.RaisePropertyChanged("TheoPct");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise", ConfigurationName="SCEnterpriseService.IMetadataResource")]
    public interface IMetadataResource {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveProperty", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData RetrieveProperty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveProperty", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData> RetrievePropertyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyByCode", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyByCodeResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData RetrievePropertyByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyByCode", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyByCodeResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData> RetrievePropertyByCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyDataByIPAddress", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyDataByIPAddressResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData RetrievePropertyDataByIPAddress(string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyDataByIPAddress", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrievePropertyDataByIPAddressResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData> RetrievePropertyDataByIPAddressAsync(string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfProperties", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfPropertiesResponse")]
        System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData> GetListOfProperties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfProperties", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfPropertiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData>> GetListOfPropertiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveState", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveStateResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.StateData RetrieveState(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveState", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveStateResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.StateData> RetrieveStateAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveStateByCode", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveStateByCodeResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.StateData RetrieveStateByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveStateByCode", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveStateByCodeResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.StateData> RetrieveStateByCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfStates", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfStatesResponse")]
        System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.StateData> GetListOfStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfStates", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfStatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.StateData>> GetListOfStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveIdentificationType", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveIdentificationTypeResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData RetrieveIdentificationType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveIdentificationType", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveIdentificationTypeResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData> RetrieveIdentificationTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveIdentificationTypeByCode", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveIdentificationTypeByCodeResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData RetrieveIdentificationTypeByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveIdentificationTypeByCode", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveIdentificationTypeByCodeResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData> RetrieveIdentificationTypeByCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfIdentificationTypes", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfIdentificationTypesResponse")]
        System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData> GetListOfIdentificationTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfIdentificationTypes", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfIdentificationTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData>> GetListOfIdentificationTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveCountry", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveCountryResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData RetrieveCountry(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveCountry", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveCountryResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData> RetrieveCountryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveCountryByCode", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveCountryByCodeResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData RetrieveCountryByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveCountryByCode", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveCountryByCodeResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData> RetrieveCountryByCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfCountries", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfCountriesResponse")]
        System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData> GetListOfCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfCountries", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfCountriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData>> GetListOfCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveVenue", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveVenueResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData RetrieveVenue(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveVenue", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveVenueResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData> RetrieveVenueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveVenueByName", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveVenueByNameResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData RetrieveVenueByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveVenueByName", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/RetrieveVenueByNameResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData> RetrieveVenueByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfVenues", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfVenuesResponse")]
        System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData> GetListOfVenues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfVenues", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetListOfVenuesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData>> GetListOfVenuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetPropertyJurisdictions", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetPropertyJurisdictionsResponse")]
        System.Collections.Generic.List<string> GetPropertyJurisdictions(string propertyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetPropertyJurisdictions", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetPropertyJurisdictionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetPropertyJurisdictionsAsync(string propertyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetTenderTypes", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetTenderTypesResponse")]
        System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.TenderType> GetTenderTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetTenderTypes", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetTenderTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.TenderType>> GetTenderTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetPropertyJurisdictionDetail", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetPropertyJurisdictionDetailResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.Jurisdiction GetPropertyJurisdictionDetail(string propertyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetPropertyJurisdictionDetail", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetPropertyJurisdictionDetailResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.Jurisdiction> GetPropertyJurisdictionDetailAsync(string propertyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetRaceGameCodeData", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetRaceGameCodeDataResponse")]
        System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData> GetRaceGameCodeData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetRaceGameCodeData", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetRaceGameCodeDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData>> GetRaceGameCodeDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetSportsGameCodeData", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetSportsGameCodeDataResponse")]
        System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData> GetSportsGameCodeData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetSportsGameCodeData", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetSportsGameCodeDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData>> GetSportsGameCodeDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetRaceGameCodeDataById", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetRaceGameCodeDataByIdResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData GetRaceGameCodeDataById(int gameId, int locationId, bool isParimutuel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetRaceGameCodeDataById", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetRaceGameCodeDataByIdResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData> GetRaceGameCodeDataByIdAsync(int gameId, int locationId, bool isParimutuel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetSportsGameCodeDataById", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetSportsGameCodeDataByIdResponse")]
        StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData GetSportsGameCodeDataById(int gameId, int locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetSportsGameCodeDataById", ReplyAction="http://www.stationcasinos.com/servicecontracts/2010/01/enterprise/IMetadataResour" +
            "ce/GetSportsGameCodeDataByIdResponse")]
        System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData> GetSportsGameCodeDataByIdAsync(int gameId, int locationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMetadataResourceChannel : StationCasinos.Repository.Lookup.SCEnterpriseService.IMetadataResource, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetadataResourceClient : System.ServiceModel.ClientBase<StationCasinos.Repository.Lookup.SCEnterpriseService.IMetadataResource>, StationCasinos.Repository.Lookup.SCEnterpriseService.IMetadataResource {
        
        public MetadataResourceClient() {
        }
        
        public MetadataResourceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MetadataResourceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetadataResourceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetadataResourceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData RetrieveProperty(int id) {
            return base.Channel.RetrieveProperty(id);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData> RetrievePropertyAsync(int id) {
            return base.Channel.RetrievePropertyAsync(id);
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData RetrievePropertyByCode(string code) {
            return base.Channel.RetrievePropertyByCode(code);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData> RetrievePropertyByCodeAsync(string code) {
            return base.Channel.RetrievePropertyByCodeAsync(code);
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData RetrievePropertyDataByIPAddress(string ipAddress) {
            return base.Channel.RetrievePropertyDataByIPAddress(ipAddress);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData> RetrievePropertyDataByIPAddressAsync(string ipAddress) {
            return base.Channel.RetrievePropertyDataByIPAddressAsync(ipAddress);
        }
        
        public System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData> GetListOfProperties() {
            return base.Channel.GetListOfProperties();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.PropertyData>> GetListOfPropertiesAsync() {
            return base.Channel.GetListOfPropertiesAsync();
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.StateData RetrieveState(int id) {
            return base.Channel.RetrieveState(id);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.StateData> RetrieveStateAsync(int id) {
            return base.Channel.RetrieveStateAsync(id);
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.StateData RetrieveStateByCode(string code) {
            return base.Channel.RetrieveStateByCode(code);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.StateData> RetrieveStateByCodeAsync(string code) {
            return base.Channel.RetrieveStateByCodeAsync(code);
        }
        
        public System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.StateData> GetListOfStates() {
            return base.Channel.GetListOfStates();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.StateData>> GetListOfStatesAsync() {
            return base.Channel.GetListOfStatesAsync();
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData RetrieveIdentificationType(int id) {
            return base.Channel.RetrieveIdentificationType(id);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData> RetrieveIdentificationTypeAsync(int id) {
            return base.Channel.RetrieveIdentificationTypeAsync(id);
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData RetrieveIdentificationTypeByCode(string code) {
            return base.Channel.RetrieveIdentificationTypeByCode(code);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData> RetrieveIdentificationTypeByCodeAsync(string code) {
            return base.Channel.RetrieveIdentificationTypeByCodeAsync(code);
        }
        
        public System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData> GetListOfIdentificationTypes() {
            return base.Channel.GetListOfIdentificationTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.IdentificationTypeData>> GetListOfIdentificationTypesAsync() {
            return base.Channel.GetListOfIdentificationTypesAsync();
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData RetrieveCountry(int id) {
            return base.Channel.RetrieveCountry(id);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData> RetrieveCountryAsync(int id) {
            return base.Channel.RetrieveCountryAsync(id);
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData RetrieveCountryByCode(string code) {
            return base.Channel.RetrieveCountryByCode(code);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData> RetrieveCountryByCodeAsync(string code) {
            return base.Channel.RetrieveCountryByCodeAsync(code);
        }
        
        public System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData> GetListOfCountries() {
            return base.Channel.GetListOfCountries();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.CountryData>> GetListOfCountriesAsync() {
            return base.Channel.GetListOfCountriesAsync();
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData RetrieveVenue(int id) {
            return base.Channel.RetrieveVenue(id);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData> RetrieveVenueAsync(int id) {
            return base.Channel.RetrieveVenueAsync(id);
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData RetrieveVenueByName(string name) {
            return base.Channel.RetrieveVenueByName(name);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData> RetrieveVenueByNameAsync(string name) {
            return base.Channel.RetrieveVenueByNameAsync(name);
        }
        
        public System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData> GetListOfVenues() {
            return base.Channel.GetListOfVenues();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.VenueData>> GetListOfVenuesAsync() {
            return base.Channel.GetListOfVenuesAsync();
        }
        
        public System.Collections.Generic.List<string> GetPropertyJurisdictions(string propertyCode) {
            return base.Channel.GetPropertyJurisdictions(propertyCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetPropertyJurisdictionsAsync(string propertyCode) {
            return base.Channel.GetPropertyJurisdictionsAsync(propertyCode);
        }
        
        public System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.TenderType> GetTenderTypes() {
            return base.Channel.GetTenderTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.TenderType>> GetTenderTypesAsync() {
            return base.Channel.GetTenderTypesAsync();
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.Jurisdiction GetPropertyJurisdictionDetail(string propertyCode) {
            return base.Channel.GetPropertyJurisdictionDetail(propertyCode);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.Jurisdiction> GetPropertyJurisdictionDetailAsync(string propertyCode) {
            return base.Channel.GetPropertyJurisdictionDetailAsync(propertyCode);
        }
        
        public System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData> GetRaceGameCodeData() {
            return base.Channel.GetRaceGameCodeData();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData>> GetRaceGameCodeDataAsync() {
            return base.Channel.GetRaceGameCodeDataAsync();
        }
        
        public System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData> GetSportsGameCodeData() {
            return base.Channel.GetSportsGameCodeData();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData>> GetSportsGameCodeDataAsync() {
            return base.Channel.GetSportsGameCodeDataAsync();
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData GetRaceGameCodeDataById(int gameId, int locationId, bool isParimutuel) {
            return base.Channel.GetRaceGameCodeDataById(gameId, locationId, isParimutuel);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.RaceGameCodeData> GetRaceGameCodeDataByIdAsync(int gameId, int locationId, bool isParimutuel) {
            return base.Channel.GetRaceGameCodeDataByIdAsync(gameId, locationId, isParimutuel);
        }
        
        public StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData GetSportsGameCodeDataById(int gameId, int locationId) {
            return base.Channel.GetSportsGameCodeDataById(gameId, locationId);
        }
        
        public System.Threading.Tasks.Task<StationCasinos.Repository.Lookup.SCEnterpriseService.SportsGameCodeData> GetSportsGameCodeDataByIdAsync(int gameId, int locationId) {
            return base.Channel.GetSportsGameCodeDataByIdAsync(gameId, locationId);
        }
    }
}
